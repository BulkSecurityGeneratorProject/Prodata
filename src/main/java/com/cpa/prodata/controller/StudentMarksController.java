/*
 * Created on 2019-05-29 ( Date ISO 2019-05-29 - Time 11:31:52 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.cpa.prodata.controller;


import java.io.IOException;
import java.util.List;

import javax.validation.Valid;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.cpa.prodata.controller.dto.StudentMarksDTO;
import com.cpa.prodata.entity.CsvUtils;
import com.cpa.prodata.entity.StudentData;
import com.cpa.prodata.entity.StudentMarks;
import com.cpa.prodata.repository.StudentMarksRepository;
import com.cpa.prodata.service. StudentMarksService;

/**
 * Rest controller which produce Hal+json content (including hateoas metadata).
 * @author Somesh Biswas version 3.0.0
 */
@RestController
@RequestMapping("/api/rest")
@CrossOrigin(origins = { "http://localhost:4300" })
public class StudentMarksController {

	private static final Logger LOG = Logger.getLogger( StudentMarksController.class);


	@Autowired
	private  StudentMarksService studentMarksService;
	
	@Autowired
	private StudentMarksRepository studentMarksRepo;

	
//	@PostMapping("/createStudentMarks")
//	public ResponseEntity<StudentMarksDTO> insertStudentMarks(@Valid @RequestBody StudentMarksDTO studentMarksDTO,
//			BindingResult result){
//				if(result.hasErrors()){
//			HttpHeaders headers = new HttpHeaders();
//			return new ResponseEntity<>(headers, HttpStatus.PRECONDITION_FAILED);
//			}
//
//			HttpHeaders headers = new HttpHeaders();
//			StudentMarksDTO datastudentMarksDTO=null;
//			try {
//			datastudentMarksDTO = studentMarksService.persistStudentMarks(studentMarksDTO);
//			} catch (Exception e) {
//				LOG.error("Error while inserting StudentMarks {}",e);
//			}
//			return new ResponseEntity<>(datastudentMarksDTO, headers, HttpStatus.CREATED);
//	}
//
//	@GetMapping("/getAllStudentMarks")
//	public ResponseEntity<List<StudentMarksDTO>> getAllStudentMarks() {
//		List<StudentMarksDTO> studentMarksDTOResp=null;
//		try {
//			studentMarksDTOResp = studentMarksService.retrieveAllStudentMarks();
//		} catch (Exception e) {
//			LOG.error("Error while retrieving all  StudentMarks {}",e);
//		}
//		return new ResponseEntity<>(studentMarksDTOResp, HttpStatus.OK);
//	}
//
//		@GetMapping("/getStudentMarksById")
//	public ResponseEntity<StudentMarksDTO> getStudentMarksById(@RequestParam("id") Integer rollno) {
//	StudentMarksDTO studentMarksDTO = null;
//		try {
//			studentMarksDTO =  studentMarksService.retrieveStudentMarksById( rollno);
//		} catch (Exception e) {
//			LOG.error("Error while retrieving By StudentMarks ID {}",e);
//		}
//		return new ResponseEntity<>(studentMarksDTO , HttpStatus.OK);
//	}
//
//
//	
//	@PutMapping("/modifyStudentMarks")
//	public ResponseEntity<StudentMarksDTO> modifyStudentMarks(@Valid @RequestBody StudentMarksDTO studentMarksDTO,
//			BindingResult result){
//				if(result.hasErrors()){
//			HttpHeaders headers = new HttpHeaders();
//			return new ResponseEntity<>(headers, HttpStatus.PRECONDITION_FAILED);
//			}
//
//			HttpHeaders headers = new HttpHeaders();
//			StudentMarksDTO datastudentMarksDTO=null;
//			try {
//			datastudentMarksDTO = studentMarksService.modifyStudentMarks(studentMarksDTO);
//			} catch (Exception e) {
//				LOG.error("Error while inserting  Data {}",e);
//			}
//			return new ResponseEntity<>(datastudentMarksDTO, headers, HttpStatus.CREATED);
//	}
//
//
//	@DeleteMapping("/removeStudentMarksById")
//	public ResponseEntity<Void> removeStudentMarksById(@Valid @RequestParam("id") Integer rollno){
//	StudentMarksDTO studentMarksDTO = studentMarksService.retrieveStudentMarksById(rollno);
//	if(studentMarksDTO !=null){
//	studentMarksService.deleteById( rollno);
//	HttpHeaders headers= new HttpHeaders();
//			return new ResponseEntity<>(headers, HttpStatus.NO_CONTENT);
//	
//	}
//
//	else{
//	HttpHeaders headers= new HttpHeaders();
//		    return new ResponseEntity<>(headers, HttpStatus.PRECONDITION_REQUIRED);
//	}
//	
//	}
//	
	@PostMapping("/uploadMarks")
	public ResponseEntity<String> uploadMultipartFile(@RequestParam("file") MultipartFile file) {
		try {
			System.out.println(file.getOriginalFilename());
			studentMarksRepo.saveAll(CsvUtils.read(StudentMarks.class, file.getInputStream()));	
			HttpHeaders headers= new HttpHeaders();
		return new ResponseEntity<>(headers, HttpStatus.OK);
} catch (IOException e) {
			// TODO Auto-generated catch block
			System.out.println("In upload error");
			e.printStackTrace();
		}
		return null;
	}

}










