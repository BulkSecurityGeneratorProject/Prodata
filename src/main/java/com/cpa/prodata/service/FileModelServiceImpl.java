/*
 * Created on 2019-05-07 ( Date ISO 2019-05-07 - Time 19:47:32 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.cpa.prodata.service;

import java.util.Collections;
import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cpa.prodata.controller.dto.FileModelDTO;
import com.cpa.prodata.controller.mapper.FileModelMapper;
import com.cpa.prodata.entity.FileModel;
import com.cpa.prodata.repository.FileModelRepository;
/**
 * Service implementation for FileModel.
 * @author Somesh Biswas version 3.0.0
 */
@Service
public class FileModelServiceImpl implements FileModelService {

private static final Logger LOG = Logger.getLogger(FileModelServiceImpl.class);

	@Autowired
	private FileModelRepository fileModelRepository;

	@Autowired
	private FileModelMapper fileModelMapper;

	
		

	public FileModelDTO persistFileModel(FileModelDTO fileModelDTOpersist){
	try{
	if(fileModelDTOpersist !=null){
		

	 FileModel fileModel = fileModelMapper.convertFileModelDTOToEntity(fileModelDTOpersist);
	 FileModel fileModelIn =  fileModelRepository.saveAndFlush(fileModel);
	return (fileModelIn !=null) ?  fileModelMapper.convertEntityToFileModelDTO(fileModelIn) : null;
	}
}
		catch (Exception e){
			LOG.error("Error while inserting FileModel {} ", e);
		}
return null;
	}

 public FileModelDTO retrieveFileModelById(Long id){

	try {
		
			FileModel fileModel = fileModelRepository.findById(id).get();
			return (fileModel != null) ?  fileModelMapper.convertEntityToFileModelDTO(fileModel) :null;
		}
		catch (Exception e){
			LOG.error("Error Message",e);
		}
		return null;
	}

public List<FileModelDTO> retrieveAllFileModel(){
try {
List<FileModel> fileModelList = fileModelRepository.findAll();
return( fileModelList != null) ?  fileModelMapper.entityListToFileModelDTOList(fileModelList) : null;
		}
		catch (Exception e){
			LOG.error("Error message",e);
		}
		return Collections.emptyList();

}

public 	FileModelDTO modifyFileModel(FileModelDTO fileModelDTOUpdate){
	try{
	if(fileModelDTOUpdate !=null){
					FileModel  fileModel = fileModelRepository.findById(fileModelDTOUpdate.getId()).get();
	 FileModel fileModelUpdate =  fileModelRepository.save(fileModel);
	return (fileModelUpdate !=null) ?  fileModelMapper.convertEntityToFileModelDTO(fileModelUpdate) : null;
					
	}
}
	catch (Exception e){
			LOG.error("Error while updating FileModel {} ", e);
		}
return null;
	}

public void deleteById(Long id){



}



}











