/*
 * Created on 2019-07-08 ( Date ISO 2019-07-08 - Time 15:31:57 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.cpa.prodata.service;

import java.util.Collections;
import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cpa.prodata.controller.dto.StaffRolesDTO;
import com.cpa.prodata.controller.mapper.StaffRolesMapper;
import com.cpa.prodata.entity.StaffRoles;
import com.cpa.prodata.repository.StaffRolesRepository;

/**
 * Service implementation for StaffRoles.
 * 
 * @author Somesh Biswas version 3.0.0
 */
@Service
public class StaffRolesServiceImpl implements StaffRolesService {

	private static final Logger LOG = Logger.getLogger(StaffRolesServiceImpl.class);

	@Autowired
	private StaffRolesRepository staffRolesRepository;

	@Autowired
	private StaffRolesMapper staffRolesMapper;

	public StaffRolesDTO persistStaffRoles(StaffRolesDTO staffRolesDTOpersist) {
		try {
			if (staffRolesDTOpersist != null) {

				StaffRoles staffRoles = staffRolesMapper.convertStaffRolesDTOToEntity(staffRolesDTOpersist);
				StaffRoles staffRolesIn = staffRolesRepository.saveAndFlush(staffRoles);
				return (staffRolesIn != null) ? staffRolesMapper.convertEntityToStaffRolesDTO(staffRolesIn) : null;
			}
		} catch (Exception e) {
			LOG.error("Error while inserting StaffRoles {} ", e);
		}
		return null;
	}

	public StaffRolesDTO retrieveStaffRolesByStaffRoleId(Long staffRoleId) {

		try {

			StaffRoles staffRoles = staffRolesRepository.findStaffRoleByStaffRoleId(staffRoleId);
			return (staffRoles != null) ? staffRolesMapper.convertEntityToStaffRolesDTO(staffRoles) : null;
		} catch (Exception e) {
			LOG.error("Error Message", e);
		}
		return null;
	}

	public StaffRolesDTO retrieveStaffRolesByStaffId(Long staffId) {

		try {

			StaffRoles staffRoles = staffRolesRepository.findActiveOneByStaffId(staffId);
			return (staffRoles != null) ? staffRolesMapper.convertEntityToStaffRolesDTO(staffRoles) : null;
		} catch (Exception e) {
			LOG.error("Error Message", e);
		}
		return null;
	}

	public List<StaffRolesDTO> retrieveAllStaffRoles() {
		try {
			List<StaffRoles> staffRolesList = staffRolesRepository.findAll();
			return (staffRolesList != null) ? staffRolesMapper.entityListToStaffRolesDTOList(staffRolesList) : null;
		} catch (Exception e) {
			LOG.error("Error message", e);
		}
		return Collections.emptyList();

	}

	public StaffRolesDTO modifyStaffRoles(StaffRolesDTO staffRolesDTOUpdate) {
		try {
			if (staffRolesDTOUpdate != null) {
				StaffRoles staffRoles = staffRolesRepository.findById(staffRolesDTOUpdate.getStaffRoleId()).get();
				StaffRoles staffRolesUpdate = staffRolesRepository.save(staffRoles);
				return (staffRolesUpdate != null) ? staffRolesMapper.convertEntityToStaffRolesDTO(staffRolesUpdate)
						: null;

			}
		} catch (Exception e) {
			LOG.error("Error while updating StaffRoles {} ", e);
		}
		return null;
	}

}
